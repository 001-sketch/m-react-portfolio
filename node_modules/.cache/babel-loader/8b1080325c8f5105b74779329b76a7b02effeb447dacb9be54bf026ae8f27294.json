{"ast":null,"code":"/**\n * Clean up a scene's materials and geometry\n */export const cleanScene=scene=>{scene.traverse(object=>{if(!object.isMesh)return;object.geometry.dispose();if(object.material.isMaterial){cleanMaterial(object.material);}else{for(const material of object.material){cleanMaterial(material);}}});scene.dispose();};/**\n * Clean up and dispose of a material\n */export const cleanMaterial=material=>{material.dispose();for(const key of Object.keys(material)){const value=material[key];if(value&&typeof value==='object'&&'minFilter'in value){value.dispose();}}};/**\n * Clean up and dispose of a renderer\n */export const cleanRenderer=renderer=>{renderer.dispose();renderer.forceContextLoss();renderer=null;};/**\n * Clean up lights by removing them from their parent\n */export const removeLights=lights=>{for(const light of lights){light.parent.remove(light);}};/**\n * A reasonable default pixel ratio\n */export const renderPixelRatio=2;","map":{"version":3,"names":["cleanScene","scene","traverse","object","isMesh","geometry","dispose","material","isMaterial","cleanMaterial","key","Object","keys","value","cleanRenderer","renderer","forceContextLoss","removeLights","lights","light","parent","remove","renderPixelRatio"],"sources":["/home/mica/react-portfolio/src/utils/three.js"],"sourcesContent":["/**\n * Clean up a scene's materials and geometry\n */\nexport const cleanScene = scene => {\n  scene.traverse(object => {\n    if (!object.isMesh) return;\n\n    object.geometry.dispose();\n\n    if (object.material.isMaterial) {\n      cleanMaterial(object.material);\n    } else {\n      for (const material of object.material) {\n        cleanMaterial(material);\n      }\n    }\n  });\n\n  scene.dispose();\n};\n\n/**\n * Clean up and dispose of a material\n */\nexport const cleanMaterial = material => {\n  material.dispose();\n\n  for (const key of Object.keys(material)) {\n    const value = material[key];\n    if (value && typeof value === 'object' && 'minFilter' in value) {\n      value.dispose();\n    }\n  }\n};\n\n/**\n * Clean up and dispose of a renderer\n */\nexport const cleanRenderer = renderer => {\n  renderer.dispose();\n  renderer.forceContextLoss();\n  renderer = null;\n};\n\n/**\n * Clean up lights by removing them from their parent\n */\nexport const removeLights = lights => {\n  for (const light of lights) {\n    light.parent.remove(light);\n  }\n};\n\n/**\n * A reasonable default pixel ratio\n */\nexport const renderPixelRatio = 2;\n"],"mappings":"AAAA;AACA;AACA,GACA,MAAO,MAAM,CAAAA,UAAU,CAAGC,KAAK,EAAI,CACjCA,KAAK,CAACC,QAAQ,CAACC,MAAM,EAAI,CACvB,GAAI,CAACA,MAAM,CAACC,MAAM,CAAE,OAEpBD,MAAM,CAACE,QAAQ,CAACC,OAAO,CAAC,CAAC,CAEzB,GAAIH,MAAM,CAACI,QAAQ,CAACC,UAAU,CAAE,CAC9BC,aAAa,CAACN,MAAM,CAACI,QAAQ,CAAC,CAChC,CAAC,IAAM,CACL,IAAK,KAAM,CAAAA,QAAQ,GAAI,CAAAJ,MAAM,CAACI,QAAQ,CAAE,CACtCE,aAAa,CAACF,QAAQ,CAAC,CACzB,CACF,CACF,CAAC,CAAC,CAEFN,KAAK,CAACK,OAAO,CAAC,CAAC,CACjB,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAG,aAAa,CAAGF,QAAQ,EAAI,CACvCA,QAAQ,CAACD,OAAO,CAAC,CAAC,CAElB,IAAK,KAAM,CAAAI,GAAG,GAAI,CAAAC,MAAM,CAACC,IAAI,CAACL,QAAQ,CAAC,CAAE,CACvC,KAAM,CAAAM,KAAK,CAAGN,QAAQ,CAACG,GAAG,CAAC,CAC3B,GAAIG,KAAK,EAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,EAAI,WAAW,EAAI,CAAAA,KAAK,CAAE,CAC9DA,KAAK,CAACP,OAAO,CAAC,CAAC,CACjB,CACF,CACF,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAQ,aAAa,CAAGC,QAAQ,EAAI,CACvCA,QAAQ,CAACT,OAAO,CAAC,CAAC,CAClBS,QAAQ,CAACC,gBAAgB,CAAC,CAAC,CAC3BD,QAAQ,CAAG,IAAI,CACjB,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAE,YAAY,CAAGC,MAAM,EAAI,CACpC,IAAK,KAAM,CAAAC,KAAK,GAAI,CAAAD,MAAM,CAAE,CAC1BC,KAAK,CAACC,MAAM,CAACC,MAAM,CAACF,KAAK,CAAC,CAC5B,CACF,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAG,gBAAgB,CAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}